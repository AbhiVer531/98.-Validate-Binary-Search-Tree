# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        def bruh(root, left, right):
            if root is None:
                return True
            if not (left < root.val and right > root.val):
                return False
            leftTree = bruh(root.left, left, root.val)
            rightTree = bruh(root.right, root.val, right)
            return leftTree and rightTree
        return bruh(root, float("-inf"), float("inf"))
